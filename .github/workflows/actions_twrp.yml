name: Make Recovery

on:
  workflow_dispatch:
    inputs:
      LIBRARY_NAME:
        description: 'LIBRARY_NAME'
        required: true
        default: 'omni'
      LIBRARY_URL:
        description: 'LIBRARY_URL'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git'
      LIBRARY_BRANCH:
        description: 'LIBRARY_BRANCH'
        required: true
        default: 'twrp-10.0-deprecated'
      DEVICE_URL:
        description: 'DEVICE_URL'
        required: true
        default: 'https://github.com/Amlogic-Devlopment-PureFusion/android_device_askey_adt3-TWRP'
      DEVICE_BRANCH:
        description: 'DEVICE_BRANCH'
        required: true
        default: 'android-10'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/askey/adt3'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'adt3'

TZ: America/New_York
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
        uses: actions/checkout@main
    - name: Show system
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h
          uname -a
          [ -f /proc/version ] && cat /proc/version
          [ -f /etc/issue.net ] && cat /etc/issue.net
          [ -f /etc/issue ] && cat /etc/issue
          ulimit -a
    - name: Free disk space
        run: |
          docker rmi `docker images -q`
          sudo -E swapoff -a
          sudo -E rm -f /swapfile
          sudo -E snap set system refresh.retain=2
          sudo -E apt-get -qq purge azure* dotnet* firefox ghc* google* hhvm
          llvm* mono* mysql* openjdk* php* zulu*
          sudo -E apt-get -qq remove --purge powershell mysql* mssql-tools
          msodbcsql17 android*
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get clean -qq
          sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql
          /etc/php /usr/local/share/boost
          sudo -E rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql
          /etc/php /usr/local/lib/android /opt/ghc /swapfile
          [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
    - name: Initialization environment
      run: |
          sudo -E apt-get update -qq
          sudo -E apt-get -qq update
          sudo -E apt-get -qq full-upgrade
          sudo -E apt-get -qq install $(curl -fsSL bit.ly/depends-ubuntu-2004)
          wget -qO - https://bit.ly/build-env-on-ubuntu-bionic | sed
          's/python-/python3-/g' | /bin/bash
          sudo -E apt-get clean -qq
          for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
          sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
    - name: Prepare the environment
      run: |
# ****Setup Linux to build Android****
        sudo apt -y install build-essential ccache libncurses5 libssl-dev m4 unzip zip brotli bc bison curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev adb fastboot python python3.8 abootimg
        sudo apt -y install qemu-user-static openjdk-8-jdk bash-completion ncftp lzma libbz2-dev libwxgtk3.0-dev libc6-dev-i386 git-core

    - name: Set variables
      run: |
        echo "::set-output name=date::$(date +%F)"
      id: var

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        export PATH=~/bin:$PATH

    - name: Initialize repo
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "Hikaru's Action-Build-Bot"
        git config --global user.email "Android@teio.tk"
        repo init --depth=1 -u ${{ github.event.inputs.LIBRARY_URL }} -b ${{ github.event.inputs.LIBRARY_BRANCH }}
      id: pwd

    - name: Repo Sync
      run: |
        PATH=~/bin:$PATH
        cd workspace
        repo sync -j$(nproc --all)

    - name: Clone device
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        wget https://github.com/Amlogic-Devlopment-PureFusion/actions_build_recovery/raw/master/device.zip
        unzip device.zip
    - name: Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch ${{ github.event.inputs.LIBRARY_NAME }}_${{ github.event.inputs.DEVICE_NAME }}-eng
        make clean
        make recoveryimage -j$(nproc --all)

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/recovery.img
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Recovery for ${{ github.event.inputs.DEVICE_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
